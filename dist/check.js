!function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:n})},r.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=1)}([function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){for(var t=arguments.length,r=Array(t>1?t-1:0),n=1;n<t;n++)r[n-1]=arguments[n];var o=r.map(function(e){return e}).filter(function(t){return e.find(function(e){return e==t})});return console.log(o),o}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n,o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},u=r(0),i=(n=u)&&n.__esModule?n:{default:n};var c=new RegExp("^[<>]{0,2}d+$","g");t.default={validate:function(e,t){var r=this,n=Object.keys(t),o=n.filter(function(e){return!e.includes("?")}),u=Object.keys(e),c=(0,i.default)(o,u);return c.length>0&&this.logError({input:e,source:n,valid:!1,message:"ValidationError: "+JSON.stringify(e)+" missing keys ["+c+"]"}),o.forEach(function(n){return r.check(e[n],t[n])}),null},check:function(e,t){return t instanceof Function&&this.checkType(e,t),"string"==typeof t||t instanceof RegExp?this.checkString(e,t):c.test(t)||"Number"===this.getType(t)?this.checkNumber(e,t):void 0},checkType:function(e,t){return(!e||""+this.getType(t)[0].toLowerCase()+this.getType(t).slice(1))!==(!!e&&""+e.constructor.name[0].toLowerCase()+e.constructor.name.slice(1))?this.logError({input:e,source:t,valid:!1,message:JSON.stringify(e)+" should be of type "+this.getType(t)}):null},checkString:function(e,t){return t instanceof RegExp?this.logError({input:e,source:t,valid:t.test(e)}):this.logError({input:e,source:t,valid:t===e})},checkNumber:function(e,t){return!1},logError:function(e){var t="ValidationError: "+e.input+" type:"+o(e.input)+" must respect "+e.source+" type:"+o(e.source);if(e.valid)return null;throw new TypeError(e.message||t)},getType:function(e){return e.name||(void 0===e?"undefined":o(e))}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,